# Based on the "trust" template v0.1.2
# https://github.com/japaric/trust/tree/v0.1.2

# Building is done in the test phase, so we disable Appveyor's build phase.
build: false

environment:
  global:
  # TODO This is the Rust channel that build jobs will use by default but can be
  # overridden on a case by case basis down below
    RUST_VERSION: stable

    # TODO Update this to match the name of your project.
    CRATE_NAME: graphannis

  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  matrix:
    # MSVC
    - TARGET: x86_64-pc-windows-msvc

install:
  - ps: >-
      If ($Env:TARGET -eq 'x86_64-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw64\bin'
      } ElseIf ($Env:TARGET -eq 'i686-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw32\bin'
      }
  - appveyor-retry appveyor DownloadFile https://win.rustup.rs/ -FileName rustup-init.exe
  - rustup-init.exe -y --default-host %TARGET% --default-toolchain %RUST_VERSION%
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - rustc -Vv
  - cargo -V

# TODO This is the "test phase", tweak it as you see fit
test_script:
  # we don't run the "test phase" when doing deploys
  - if [%APPVEYOR_REPO_TAG%]==[false] (
      cargo build --target %TARGET% --release --all-features &&
      cargo test --target %TARGET% --release --all-features &&
      appveyor-retry appveyor DownloadFile https://github.com/amir-zeldes/gum/archive/f8ac9944fae39ae37c4db186304e3c1ab41f77f3.zip -FileName gum.zip && 
      7z e gum.zip -orelannis\GUM -aoa &&
      target\%TARGET%\release\annis.exe data --cmd "import relannis/GUM" &&
      cargo test --release --verbose  -- --ignored
    )

before_deploy:
  # TODO Update this to build the artifacts that matter to you
  - cargo build --target %TARGET% --release --features "c-api"

artifacts:
  - path: target\$(TARGET)\release\graphannis_capi.dll
    name: graphannis_capi.dll

deploy:
  artifact: graphannis_capi.dll
  tag: $(APPVEYOR_REPO_TAG_NAME)
  # TODO update `auth_token.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it. Go to https://ci.appveyor.com/tools/encrypt
  # - Paste the output down here
  auth_token:
    secure: zmvMxlwpu6ZdXYp4Q1h2sj1Vzcf2TUkkrf9sJAdezJ/wD2IRYvFsjRm7slLdati9
  description: ''
  draft: true
  on:
    # TODO Here you can pick which targets will generate binary releases
    RUST_VERSION: stable
    appveyor_repo_tag: true
  provider: GitHub

cache:
  - C:\Users\appveyor\.cargo\registry
  - target

branches:
  only:
    # Release tags
    - /^v\d+\.\d+\.\d+.*$/
    - test-release-tag-please-ignore
    - master
    - develop
    - appveyor
    - staging

notifications:
  - provider: Email
    on_build_success: false
